# Телефонные номера в адресной книге мобильного телефона имеют один из следующих форматов: +7<код><номер>, 8<код><номер>, <номер>,
# где <номер> — это семь цифр, а <код> — это три цифры или три цифры в круглых скобках.
# Если код не указан, то считается, что он равен 495. Кроме того, в записи телефонного номера может стоять знак “-” между любыми двумя цифрами (см. пример).
# На данный момент в адресной книге телефона Васи записано всего три телефонных номера, и он хочет записать туда еще один.
# Но он не может понять, не записан ли уже такой номер в телефонной книге. Помогите ему!
# Два телефонных номера совпадают, если у них равны коды и равны номера. Например, +7(916)0123456 и 89160123456 — это один и тот же номер.
#
# Формат ввода
# В первой строке входных данных записан номер телефона, который Вася хочет добавить в адресную книгу своего телефона.
# В следующих трех строках записаны три номера телефонов, которые уже находятся в адресной книге телефона Васи.
# Гарантируется, что каждая из записей соответствует одному из трех приведенных в условии форматов.
#
# Формат вывода
# Для каждого телефонного номера в адресной книге выведите YES (заглавными буквами), если он совпадает с тем телефонным номером, который Вася хочет добавить в адресную книгу
# или NO (заглавными буквами) в противном случае.

def parse_phone(phone):
    num = ''
    for char in phone:
        if char.isnumeric():
            num += char
    if len(num) == 7:
        return '495' + num
    else:
        return num[1:]

def get_answers(nadd, numbers):
    answers = []
    for n in numbers:
        if parse_phone(nadd) == parse_phone(n):
            answers.append('YES')
        else:
            answers.append('NO')
    return answers

def main():
    nadd = input()
    n1 = input()
    n2 = input()
    n3 = input()
    for ans in get_answers(nadd, [n1, n2, n3]):
        print(ans)

assert get_answers('8(495)430-23-97', ['+7-4-9-5-43-023-97', '4-3-0-2-3-9-7', '8-495-430']) == ['YES', 'YES', 'NO']
assert get_answers('86406361642', ['83341994118', '86406361642', '83341994118']) == ['NO', 'YES', 'NO']
assert get_answers('+78047952807', ['+78047952807', '+76147514928', '88047952807']) == ['YES', 'NO', 'YES']

main()